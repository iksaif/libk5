project (libk5 C)
cmake_minimum_required (VERSION 2.6)

if (CMAKE_COMPILER_IS_GNUCC)
  add_definitions(-Wall -std=gnu99)
endif(CMAKE_COMPILER_IS_GNUCC)

if (WIN32 AND MSVC)
  add_definitions(-D_CRT_SECURE_NO_WARNINGS -D_CRT_NONSTDC_NO_DEPRECATE)
endif (WIN32 AND MSVC)

set(K5_LIB_MAJOR_VERSION "0")
set(K5_LIB_MINOR_VERSION "2")
set(K5_LIB_PATCH_VERSION "0")

set(K5_LIB_VERSION_STRING "${K5_LIB_MAJOR_VERSION}.${K5_LIB_MINOR_VERSION}.${K5_LIB_PATCH_VERSION}")

set(CMAKE_MODULE_PATH "${CMAKE_SOURCE_DIR}/cmake" ${CMAKE_MODULE_PATH})

set(KRB5_FIND_REQUIRED 1)
set(KRB5_FIND_COMPONENTS krb5 gssapi)
find_package (Krb5 REQUIRED)

add_subdirectory (src)
add_subdirectory (tools)

if(WIN32)
  install(FILES
          "${KRB5_KFW_PATH}/bin/comerr32.dll"
	  "${KRB5_KFW_PATH}/bin/k5sprt32.dll"
	  "${KRB5_KFW_PATH}/bin/krb5_32.dll"
	  "${KRB5_KFW_PATH}/bin/gssapi32.dll"
	  "${KRB5_KFW_PATH}/bin/wshelp32.dll"
	  COMPONENT tools
          DESTINATION bin
  )
endif (WIN32)

# CPack
set(CPACK_VERSION_MAJOR ${K5_LIB_MAJOR_VERSION})
set(CPACK_VERSION_MINOR ${K5_LIB_MINOR_VERSION})
set(CPACK_VERSION_PATCH ${K5_LIB_PATCH_VERSION})
set(CPACK_VERSION ${K5_LIB_VERSION_STRING})
set(CPACK_PACKAGE_VERSION ${K5_LIB_VERSION_STRING})
set(CPACK_PACKAGE_CONTACT "Corentin Chary <corentin.chary@gmail.com>")
set(CPACK_RESOURCE_FILE_LICENSE "${CMAKE_CURRENT_SOURCE_DIR}/COPYING")
set(CPACK_RESOURCE_FILE_README "${CMAKE_CURRENT_SOURCE_DIR}/INSTALL")
set(CPACK_PACKAGE_DESCRIPTION_SUMMARY "A simple kerberos 5 library")
set(CPACK_PACKAGE_VENDOR "http://floss.commonit.com/k5.html")
set(CPACK_SOURCE_IGNORE_FILES
  "~$"
  "^${PROJECT_SOURCE_DIR}/\\\\.git"
  "^${PROJECT_SOURCE_DIR}/build/")
#set(CPACK_INSTALL_CMAKE_PROJECTS "${CMAKE_CURRENT_BUILD_DIR};k5;ALL;/")
set(CPACK_COMPONENTS_ALL libraries devel tools)
set(CPACK_COMPONENT_LIBRARIES_DISPLAY_NAME "Library")
set(CPACK_COMPONENT_LIBRARIES_DESCRIPTION "A library for lib5")
set(CPACK_COMPONENT_DEVEL_DISPLAY_NAME "Development files")
set(CPACK_COMPONENT_DEVEL_DESCRIPTION "Development files for libk5")
set(CPACK_COMPONENT_DEVEL_DEPENDS libraries)
set(CPACK_COMPONENT_TOOLS_DISPLAY_NAME "Tools")
set(CPACK_COMPONENT_TOOLS_DESCRIPTION "Tools using libk5 (krb5-test, kinit, klist, ...)")
set(CPACK_COMPONENT_TOOLS_DEPENDS libraries)
set(CPACK_PACKAGE_FILE_NAME "libk5-${CPACK_VERSION}-${CMAKE_SYSTEM_NAME}")
set(CPACK_SOURCE_PACKAGE_FILE_NAME "libk5-${CPACK_VERSION}")

if(NOT WIN32)
  set(CPACK_SOURCE_GENERATOR "TGZ;TBZ2")
else()
  set(CPACK_GENERATOR "ZIP;NSIS")
  set(CPACK_SOURCE_GENERATOR "ZIP")
  set(CPACK_BINARY_CYGWIN "OFF")
  set(CPACK_SOURCE_CYGWIN "OFF")
  set(CPACK_PACKAGE_FILE_NAME "libk5-${CPACK_VERSION}-win32")
  set(CPACK_BINARY_NSIS "ON")
  set(CPACK_NSIS_MODIFY_PATH "OFF")
  set(CPACK_NSIS_DISPLAY_NAME "K5")
  set(CPACK_NSIS_HELP_LINK "http://floss.commonit.com/k5.html")
  set(CPACK_NSIS_URL_INFO_ABOUT "http://floss.commonit.com/k5.html")
  set(CPACK_NSIS_CONTACT "Corentin Chary <corentin.chary@gmail.com>")
  set(CPACK_PACKAGE_INSTALL_DIRECTORY "k5")
endif()

include(CPack)
